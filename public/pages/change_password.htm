<div id="change-password-div" >
    <div class="row"></div>
    <div class="row">
        <div class="card title-card col s12 m8 offset-m2 l6 offset-l3 xl6 offset-xl3">
            <div class="card-content" style="padding: 0px">
                <span class="center-align"><h3 class="truncate">Изменить пароль</h3></span>
            </div>
        </div>
    </div>
    <div class="row">
        <form method="POST" id="change-password-form" class="card col s12 m8 offset-m2 l8 offset-l2 xl6 offset-xl3" data-bind="submit: ChangePassword">
            <div class="card-content">
                <div class="row input-field">
                    <i class="icon ion-md-key prefix"></i>
                    <input class="validate" id="current_password" type="password" data-bind="value: changePasswordForm.current_password">
                    <label for="current_password">Текущий пароль</label>
                </div>
                <div class="row input-field">
                    <i class="material-icons prefix">done</i>
                    <input class="validate" id="new_password" type="password" data-bind="value: changePasswordForm.new_password">
                    <label for="new_password">Новый пароль</label>
                </div>
                <div class="row input-field">
                    <i class="material-icons prefix">done_all</i>
                    <input class="validate" id="new_password_confirmation" type="password" data-bind="value: changePasswordForm.new_password_confirmation">
                    <label for="new_password_confirmation">Подтвердить новый пароль</label>
                </div>
                <div class="row">
                    <button class="col s12 m8 offset-m2 l8 offset-l2 xl8 offset-xl2 btn waves-effect waves-light" type="submit">
                        <i class="material-icons left">save</i>
                        Изменить пароль
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    let ChangePasswordViewModel = {
        // properties
        changePasswordForm: {
            current_password: ko.observable(''),
            new_password: ko.observable(''),
            new_password_confirmation: ko.observable(''),
        },
        // methods
        ChangePassword: function() {
            let formData = ko.toJS(this.changePasswordForm);
            RootViewModel.PreloaderShow();
            $.ajax({
                url: "api/user/password/change",
                data: formData,
                type: 'POST',
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("Authorization", 'Bearer '+ Cookies.get('wedding_token'));
                }
            }).done(function(resp) {
                M.toast({html: resp.message, classes: 'rounded'});
                ChangePasswordViewModel.CleanForm();
                RootViewModel.PreloaderHide();
            }).fail(function(xhr, status, text) {
                RootViewModel.PreloaderHide();
                HandleError(xhr, '#change_password');
                //ShowModalError('#performer', xhr);
                //alert("error: " + text);
            });
        },
        CleanForm: function() {
            ChangePasswordViewModel.changePasswordForm.current_password('');
            ChangePasswordViewModel.changePasswordForm.new_password('');
            ChangePasswordViewModel.changePasswordForm.new_password_confirmation('');
        },
    }

    // object activation
    ko.applyBindings(ChangePasswordViewModel, document.getElementById("change-password-div"));

    $(document).on("ChangePasswordVisible", function () {
        ChangePasswordViewModel.CleanForm();
    });

</script>
