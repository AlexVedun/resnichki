<div id="add-user-div" >
    <div class="row"></div>
    <div class="row">
        <div class="card title-card col s12 m8 offset-m2 l8 offset-l2 xl8 offset-xl2">
            <div class="card-content" style="padding: 0px">
                <span class="center-align"><h3 class="truncate">Создать пользователя</h3></span>
            </div>
        </div>
    </div>
    <div class="row">
    <!-- Create user -->
        <div class="row">
            <form method="post" id="add-user-form" class="col s12 m8 offset-m2 l8 offset-l2 xl8 offset-xl2" data-bind="submit: CreateUser">
                <div class="row card">
                    <div class="card-content">
                        <div class="row">
                            <div class="input-field">
                                <i class="material-icons prefix">face</i>
                                <input name="name" id="name-input" type="text" data-length="255" data-bind="value: addUserForm.name">
                                <label for="name-input">ФИО</label>
                            </div>
                        </div>

                        <div class="row">
                            <div class="input-field">
                                <i class="material-icons prefix">mail</i>
                                <input name="email" id="email-input" type="email" data-length="255" data-bind="value: addUserForm.email">
                                <label for="email-input">E-mail</label>
                            </div>
                        </div>

                        <div class="row">
                            <div class="input-field">
                                <i class="material-icons prefix">list</i>
                                <select id="type-list">
                                    <option value="ind">Физическое лицо</option>
                                    <option value="ent">Физическое лицо-предприниматель</option>
                                    <option value="firm">Фирма</option>
                                </select>
                                <label>Тип исполнителя</label>
                            </div>
                        </div>

                        <div class="row">
                            <div class="input-field">
                                <i class="material-icons prefix">list</i>
                                <select id="role-list">
                                    <option value="perf">Исполнитель</option>
                                    <option value="admin">Администратор</option>
                                </select>
                                <label>Роль пользователя</label>
                            </div>
                        </div>

                        <div class="row">
                            <button class="col s12 m4 offset-m4 l4 offset-l4 xl4 offset-xl4 btn waves-effect waves-light" type="submit"><i class="material-icons left">add</i>Создать</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    let AddUserViewModel = {
        // properties
        addUserForm: {
            name: ko.observable(''),
            email: ko.observable(''),
            type: ko.observable(''),
            role: ko.observable(''),
        },
        // methods
        ClearAddUserForm: function() {
            for (const key in AddUserViewModel.addUserForm) {
                if (AddUserViewModel.addUserForm.hasOwnProperty(key)) {
                    const element = AddUserViewModel.addUserForm[key];
                    element('');
                }
            }
        },
        CreateUser: function() {
            this.addUserForm.type = GetSelectedItemValue('type-list');
            this.addUserForm.role = GetSelectedItemValue('role-list');
            let formData = ko.toJS(this.addUserForm);
            RootViewModel.PreloaderShow();
            $.ajax({
                url: "api/register",
                data: formData,
                type: 'POST',
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("Authorization", 'Bearer '+ Cookies.get('wedding_token') /* localStorage.getItem('wedding_token') */);
                }
            }).done(function(resp) {
                M.toast({html: 'Аккаунт пользователя создан', classes: 'rounded'});
                RootViewModel.PreloaderHide();
                AddUserViewModel.ClearAddUserForm();
                //location.hash = '#admin';
            }).fail(function(xhr, status, text) {
                RootViewModel.PreloaderHide();
                HandleError(xhr, '#admin');
                //ShowModalError('#admin', xhr);
                //alert("error: " + text);
            });
        },
    }

    // object activation
    ko.applyBindings(AddUserViewModel, document.getElementById("add-user-div"));

    // update news when main page becomes visible
    $(document).on("AddUserVisible", function () {
        $('#type-list').formSelect();
        $('#role-list').formSelect();
    });

</script>
