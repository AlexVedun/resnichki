<div id="login-div" >
    <div class="row"></div>
    <div class="row">
        <div class="card col s12 m8 offset-m2 l6 offset-l3 xl6 offset-xl3">
            <div class="card-content" style="padding: 0px">
                <span class="center-align"><h3 class="truncate">Вход</h3></span>
            </div>
        </div>
    </div>
    <div class="row">
        <form id="login-form" class="card col s12 m8 offset-m2 l6 offset-l3 xl6 offset-xl3">
            <div class="card-content">
                <div class="row input-field">
                    <i class="material-icons prefix">mail</i>
                    <input class="validate" id="email" name="login" type="email" data-bind="value: loginForm.email">
                    <label for="email">E-mail</label>
                </div>
                <div class="row input-field">
                    <i class="icon ion-md-key prefix"></i>
                    <input class="validate" id="password" name="password" type="password" data-bind="value: loginForm.password">
                    <label for="password">Пароль</label>
                </div>
                <div class="row">
                    <p>
                        <label>
                            <input type="checkbox" />
                            <span data-bind="click: RememberMeClick">Запомнить меня</span>
                        </label>
                    </p>
                </div>
                <div class="row">
                    <button class="col s6 offset-s3 btn waves-effect waves-light" data-bind="click: LoginUser">
                        <i class="left icon ion-md-log-in"></i>
                        Вход
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    let LoginViewModel = {
        // properties
        loginForm:{
            email: ko.observable(''),
            password: ko.observable(''),
            remember_me: ko.observable(false),
        },
        // methods
        CleanForm: function() {
            LoginViewModel.loginForm.email('');
            LoginViewModel.loginForm.password('');
            $("input[type='checkbox']").click();
            LoginViewModel.loginForm.remember_me(false);
        },
        LoginUser: function() {
            let formData = ko.toJS(this.loginForm);
            RootViewModel.PreloaderShow();
            $.ajax({
                url: "api/login",
                data: formData,
                type: 'POST'
            }).done(function(resp) {
                //RootViewModel.token(resp.token);
                //localStorage.setItem('wedding_token', resp.token);
                let expires = new Date(resp.expires_at);
                SetCookie('wedding_token', resp.token, expires.toUTCString());
                RootViewModel.PreloaderHide();
                RootViewModel.isLogin(true);
                localStorage.setItem('user_role', resp.user.role);
                LoginViewModel.CleanForm();
                switch (resp.user.role) {
                    case 'admin':
                        //userRole = resp.user.role;
                        location.hash = '#admin';
                        break;
                    case 'perf':
                        //userRole = resp.user.role;
                        location.hash = '#performer';
                        break;
                }
            }).fail(function(xhr, status, text) {
                RootViewModel.PreloaderHide();
                //HandleError(xhr, '#login');
                ShowModalError('#login', xhr);
                //alert("error: " + text);
            });
        },
        RememberMeClick: function() {
            this.loginForm.remember_me(!this.loginForm.remember_me());
            return true;
        }
    }

    // object activation
    ko.applyBindings(LoginViewModel, document.getElementById("login-div"));

</script>
