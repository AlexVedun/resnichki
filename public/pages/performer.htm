<div id="performer-div" >
    <div class="row">
        <div class="col s12">
            <span class="center-align"><h2 data-bind="text: title"></h2></span>
        </div>
    </div>
    <div class="row">
        <div class="col s12">
            <ul class="performer-tabs tabs">
            <li class="tab col s3"><a class="active" href="#contacts">Контактные данные</a></li>
            <li class="tab col s3"><a href="#offers">Предложения</a></li>
            <li class="tab col s3"><a href="#change-password">Изменить пароль</a></li>
            <!-- <li class="tab col s3"><a href="#test4">Test 4</a></li> -->
            </ul>
        </div>
        <div id="contacts" class="col s12">
            <form id="contacts-form">
                <div class="row">
                    <div class="col s6 offset-s3">
                        <div class="row input-field">
                            <i class="material-icons prefix">face</i>
                            <input id="contact_name" type="text" data-bind="value: contactsForm.contact_name">
                            <label class="active" for="contact_name">Контактное лицо</label>
                        </div>
                        <div class="row input-field">
                            <i class="material-icons prefix">phone</i>
                            <input id="phone" type="text" data-bind="value: contactsForm.phone">
                            <label class="active" for="phone">Рабочий телефон</label>
                        </div>
                        <div class="row input-field">
                            <i class="material-icons prefix">phone_android</i>
                            <input id="mobile_1" type="text" data-bind="value: contactsForm.mobile_1">
                            <label class="active" for="mobile_1">Мобильный телефон №1</label>
                        </div>
                        <div class="row input-field">
                            <i class="material-icons prefix">phone_android</i>
                            <input id="mobile_2" type="text" data-bind="value: contactsForm.mobile_2">
                            <label class="active" for="mobile_2">Мобильный телефон №2</label>
                        </div>
                        <div class="row input-field">
                            <i class="material-icons prefix">phone_android</i>
                            <input id="mobile_3" type="text" data-bind="value: contactsForm.mobile_3">
                            <label class="active" for="mobile_3">Мобильный телефон №3</label>
                        </div>
                        <div class="row input-field">
                            <i class="material-icons prefix">chat</i>
                            <input id="viber" type="text" data-bind="value: contactsForm.viber">
                            <label class="active" for="viber">Viber</label>
                        </div>
                        <div class="row input-field">
                            <i class="prefix icon ion-logo-whatsapp"></i>
                            <input id="whats_up" type="text" data-bind="value: contactsForm.whats_up">
                            <label class="active" for="whats_up">WhatsUp</label>
                        </div>
                        <div class="row input-field">
                            <i class="prefix icon ion-md-paper-plane"></i>
                            <input id="telegram" type="text" data-bind="value: contactsForm.telegram">
                            <label class="active" for="telegram">Telegram</label>
                        </div>
                        <div class="row input-field">
                            <i class="prefix icon ion-logo-skype"></i>
                            <input id="skype" type="text" data-bind="value: contactsForm.skype">
                            <label class="active" for="skype">Skype</label>
                        </div>
                        <div class="row input-field">
                            <i class="prefix icon ion-logo-vk"></i>
                            <input id="vkontakte" type="text" data-bind="value: contactsForm.vkontakte">
                            <label class="active" for="vkontakte">ВКонтакте</label>
                        </div>
                        <div class="row input-field">
                            <i class="prefix icon ion-logo-instagram"></i>
                            <input id="instagram" type="text" data-bind="value: contactsForm.instagram">
                            <label class="active" for="instagram">Instagram</label>
                        </div>
                        <div class="row input-field">
                            <i class="material-icons prefix">web</i>
                            <input id="web_site" type="text" data-bind="value: contactsForm.web_site">
                            <label class="active" for="web_site">Web-site</label>
                        </div>
                        <div class="row">
                            <button class="col s4 offset-s4 btn waves-effect waves-light" data-bind="click: SaveContacts">
                                <i class="material-icons left">save</i>
                                Сохранить
                            </button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div id="offers" class="row">
            <form id="offers-list-form" class="col s12 m8 offset-m2 l8 offset-l2 xl8 offset-xl2" data-bind="visible: isOfferListForm">
                <div data-bind="foreach: OffersList">
                    <div class="row">
                        <div class="card hoverable horizontal">
                            <div class="card-image">
                                <img class="offer-image-preview" data-bind="attr: { src: $data.cover }">
                            </div>
                            <div class="card-stacked">
                                <div class="card-content">
                                    <h5><!--ko text: title--><!--/ko--></h5>
                                    <!--ko text: short_descr--><!--/ko-->
                                </div>
                                <div class="card-action">
                                    <button class="btn waves-effect waves-light" data-bind="click: $parent.SelectOffer.bind($data, $data.id)">Открыть</button>
                                    <button class="btn waves-effect waves-light">Удалить</button>
                                </div>
                                <!-- <div class="card-action">
                                    <a href="#">This is a link</a>
                                </div> -->
                            </div>
                        </div>
                    </div>
                    <!-- <ul class="collection" data-bind="foreach: OffersList">
                        <li class="collection-item avatar">
                            <img alt="" class="responsive-img" data-bind="attr: { src: $data.cover }">
                            <span class="title" data-bind="text: $data.title"></span>
                            <button data-bind="click: $parent.SelectOffer.bind($data, $data.id)">Открыть</button>
                            <button>Удалить</button>
                        </li>
                    </ul> -->
                    <!-- <div class="collection" data-bind="foreach: OffersList">
                        <a href="" class="collection-item avatar" data-bind="text: $data.title, click: $parent.SelectOffer.bind($data, $data.id)">
                            <img alt="" class="" data-bind="attr: { src: $data.cover }">
                        </a>
                    </div> -->
                </div>
            </form>
            <form method="post" id="offer-editor-form" class="col s12 m8 offset-m2 l8 offset-l2 xl8 offset-xl2" enctype="multipart/form-data" data-bind="hidden: isOfferListForm, submit: SaveChanges">
                <div class="row">
                    <div class="input-field">
                        <input name="title" id="title-input" type="text" data-length="255" data-bind="value: offerEditorForm.title">
                        <label class="active" for="title-input">Заголовок</label>
                    </div>
                </div>
                <div class="row">
                    <div class="input-field">
                        <textarea name="short_descr" id="short-descr" class="materialize-textarea" data-length="100" data-bind="text: offerEditorForm.short_descr"></textarea>
                        <label class="active" for="short-descr">Краткое описание</label>
                    </div>
                </div>
                <div class="row">
                    <div class="input-field">
                        <select id="categories-list" data-bind="foreach: categories">
                            <option data-bind="text: $data.name, value: $data.id"></option>
                        </select>
                        <label>Категории</label>
                    </div>
                </div>
                <div class="row">
                    <img data-bind="attr: { src: offerEditorForm.cover }">
                </div>
                <div class="file-field input-field">
                    <div class="btn">
                        <span>Загрузить</span>
                        <input name="cover_file" id="cover-file" type="file" data-bind="event: { change: function() { PerformerViewModel.offerEditorForm.is_cover_change(true); } }">
                    </div>
                    <div class="file-path-wrapper">
                        <input class="file-path validate" type="text">
                    </div>
                </div>
                <div class="row">
                    <button class="btn waves-effect waves-light" data-bind="click: function() { PerformerViewModel.isOfferListForm(true); }">Вернуться</button>
                    <button class="btn waves-effect waves-light" type="submit">Сохранить</button>
                </div>
            </form>
        </div>
        <div id="change-password">
            <form id="change-password-form" class="card col s6 offset-s3">
                <div class="card-content">
                    <div class="row input-field">
                        <i class="icon ion-md-key prefix"></i>
                        <input class="validate" id="current_password" type="password" data-bind="value: changePasswordForm.current_password">
                        <label for="current_password">Текущий пароль</label>
                    </div>
                    <div class="row input-field">
                        <i class="material-icons prefix">done</i>
                        <input class="validate" id="new_password" type="password" data-bind="value: changePasswordForm.new_password">
                        <label for="new_password">Новый пароль</label>
                    </div>
                    <div class="row input-field">
                        <i class="material-icons prefix">done_all</i>
                        <input class="validate" id="new_password_confirmation" type="password" data-bind="value: changePasswordForm.new_password_confirmation">
                        <label for="new_password_confirmation">Подтвердить новый пароль</label>
                    </div>
                    <div class="row">
                        <button class="col s4 offset-s4 btn waves-effect waves-light" data-bind="click: ChangePassword">
                            <i class="material-icons left">save</i>
                            Изменить пароль
                        </button>
                    </div>
                </div>
            </form>
        </div>
        <!-- <div id="test4" class="col s12">Test 4</div> -->
    </div>
</div>

<script>
    let PerformerViewModel = {
        // properties
        title: ko.observable(''),
        contactsForm: {
            contact_name: ko.observable(''),
            phone: ko.observable(''),
            mobile_1: ko.observable(''),
            mobile_2: ko.observable(''),
            mobile_3: ko.observable(''),
            viber: ko.observable(''),
            whats_up: ko.observable(''),
            telegram: ko.observable(''),
            skype: ko.observable(''),
            vkontakte: ko.observable(''),
            web_site: ko.observable(''),
            instagram: ko.observable(''),
        },
        changePasswordForm: {
            current_password: ko.observable(''),
            new_password: ko.observable(''),
            new_password_confirmation: ko.observable(''),
        },
        OffersList: ko.observableArray([]),
        isOfferListForm: ko.observable(true),
        categories: ko.observableArray([]),
        offerEditorForm: {
            title: ko.observable(''),
            cover: ko.observable(''),
            short_descr: ko.observable(''),
            offer_id: ko.observable(0),
            is_cover_change: ko.observable(false),
        },
        // methods
        UpdatePerformer: function() {
            RootViewModel.PreloaderShow();
            $.ajax({
                url: "api/user/get",
                type: 'GET',
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("Authorization", 'Bearer '+ Cookies.get('wedding_token') /* localStorage.getItem('wedding_token') */ );
                }
            }).done(function(resp) {
                if (resp.details != null){
                    PerformerViewModel.contactsForm.contact_name(resp.details.contact_name);
                    PerformerViewModel.contactsForm.phone(resp.details.phone);
                    PerformerViewModel.contactsForm.mobile_1(resp.details.mobile_1);
                    PerformerViewModel.contactsForm.mobile_2(resp.details.mobile_2);
                    PerformerViewModel.contactsForm.mobile_3(resp.details.mobile_3);
                    PerformerViewModel.contactsForm.viber(resp.details.viber);
                    PerformerViewModel.contactsForm.whats_up(resp.details.whats_up);
                    PerformerViewModel.contactsForm.telegram(resp.details.telegram);
                    PerformerViewModel.contactsForm.skype(resp.details.skype);
                    PerformerViewModel.contactsForm.vkontakte(resp.details.vkontakte);
                    PerformerViewModel.contactsForm.web_site(resp.details.web_site);
                    PerformerViewModel.contactsForm.instagram(resp.details.instagram);
                }
                else {
                    PerformerViewModel.contactsForm.contact_name('');
                    PerformerViewModel.contactsForm.phone('');
                    PerformerViewModel.contactsForm.mobile_1('');
                    PerformerViewModel.contactsForm.mobile_2('');
                    PerformerViewModel.contactsForm.mobile_3('');
                    PerformerViewModel.contactsForm.viber('');
                    PerformerViewModel.contactsForm.whats_up('');
                    PerformerViewModel.contactsForm.telegram('');
                    PerformerViewModel.contactsForm.skype('');
                    PerformerViewModel.contactsForm.vkontakte('');
                    PerformerViewModel.contactsForm.web_site('');
                    PerformerViewModel.contactsForm.instagram('');
                }
                RootViewModel.PreloaderHide();
            }).fail(function(xhr, status, text) {
                RootViewModel.PreloaderHide();
                ShowModalError('#performer', xhr);
                //alert("error: " + text);
            });
        },
        SaveContacts:function() {
            let formData = ko.toJS(this.contactsForm);
            RootViewModel.PreloaderShow();
            $.ajax({
                url: "api/user/save/contacts",
                data: formData,
                type: 'POST',
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("Authorization", 'Bearer '+ Cookies.get('wedding_token') /* localStorage.getItem('wedding_token') */);
                }
            }).done(function(resp) {
                M.toast({html: 'Изменения сохранены!', classes: 'rounded'});
                RootViewModel.PreloaderHide();
            }).fail(function(xhr, status, text) {
                RootViewModel.PreloaderHide();
                ShowModalError('#performer', xhr);
                //alert("error: " + text);
            });
        },
        ChangePassword: function() {
            let formData = ko.toJS(this.changePasswordForm);
            RootViewModel.PreloaderShow();
            $.ajax({
                url: "api/user/password/change",
                data: formData,
                type: 'POST',
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("Authorization", 'Bearer '+ Cookies.get('wedding_token') /* localStorage.getItem('wedding_token') */);
                }
            }).done(function(resp) {
                M.toast({html: resp.message, classes: 'rounded'});
                RootViewModel.PreloaderHide();
            }).fail(function(xhr, status, text) {
                console.log(xhr);
                RootViewModel.PreloaderHide();
                ShowModalError('#performer', xhr);
                //alert("error: " + text);
            });
        },
        GetOffersList: function() {
            RootViewModel.PreloaderShow();
            $.ajax({
                url: "api/offers/get",
                type: 'GET',
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("Authorization", 'Bearer '+ Cookies.get('wedding_token') /* localStorage.getItem('wedding_token') */ );
                }
            }).done(function(resp) {
                console.log(resp);
                PerformerViewModel.OffersList([]);
                for (const item of resp) {
                    PerformerViewModel.OffersList.push(item);
                }
                RootViewModel.PreloaderHide();
            }).fail(function(xhr, status, text) {
                RootViewModel.PreloaderHide();
                ShowModalError('#performer', xhr);
                //alert("error: " + text);
            });
        },
        GetCategoriesList: function() {
            RootViewModel.PreloaderShow();
            $.ajax({
                url: "api/categories",
                type: 'GET'
            }).done(function(resp) {
                PerformerViewModel.categories([]);
                resp.forEach(element => {
                    PerformerViewModel.categories.push(element);
                });
                $('#categories-list').formSelect();
                RootViewModel.PreloaderHide();
            }).fail(function(xhr, status, text) {
                RootViewModel.PreloaderHide();
                ShowModalError('#performer', xhr);
                //alert("error: " + text);
            });
        },
        SelectOffer: function(_id) {
            for (const item of PerformerViewModel.OffersList()) {
                if (item.id == _id) {
                    offer = item;
                    break;
                }
            }
            console.log(offer);
            PerformerViewModel.offerEditorForm.title(offer.title);
            PerformerViewModel.offerEditorForm.cover(offer.cover);
            PerformerViewModel.offerEditorForm.short_descr(offer.short_descr);
            PerformerViewModel.offerEditorForm.offer_id(offer.id);
            SetSelectedItem('categories-list', offer.category_id);
            //$('#categories-list').parent('li').eq($('#categories-list option[value=' + offer.category_id + ']').index()).addClass('selected');
            // $('#categories-list option[value=' + offer.category_id + ']').prop({ selected: true });
            // $('#categories-list').formSelect();
            PerformerViewModel.isOfferListForm(false);
        },
        SaveChanges: function() {
            //var files = $("#cover-file").get(0).files;
            //var data = new FormData($('#offer-editor-form').get(0));
            var formData = new FormData();
            //formData.append('cover_file', $('input[type=file]')[0].files[0]);
            formData.append("cover_file", $('#cover-file').prop('files')[0]);
            formData.append("title", this.offerEditorForm.title());
            formData.append("short_descr", this.offerEditorForm.short_descr());
            formData.append("category_id", GetSelectedItemId('categories-list'));
            formData.append("offer_id", this.offerEditorForm.offer_id());
            formData.append("is_cover_change", this.offerEditorForm.is_cover_change());
            //console.log(files);

            //this.offerEditorForm.cover_file = $('#cover-file').prop('files')[0];
            // var formData0 = new FormData($('#offer-editor-form')[0]);
            // console.log(formData0);
            // let formData = ko.toJS(this.offerEditorForm);
            // console.log(formData);
            RootViewModel.PreloaderShow();
            $.ajax({
                url: "api/offers/save",
                data: formData,
                type: 'POST',
                contentType: false,
                processData: false,
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("Authorization", 'Bearer '+ Cookies.get('wedding_token') /* localStorage.getItem('wedding_token') */);
                }
            }).done(function(resp) {
                console.log(resp);
                M.toast({html: 'Изменения сохранены!', classes: 'rounded'});
                RootViewModel.PreloaderHide();
            }).fail(function(xhr, status, text) {
                RootViewModel.PreloaderHide();
                ShowModalError('#performer', xhr);
                //alert("error: " + text);
            });
        },
    }

    // object activation
    ko.applyBindings(PerformerViewModel, document.getElementById("performer-div"));

    // update news when main page becomes visible
    $(document).on("PerformerVisible", function () {
        PerformerViewModel.UpdatePerformer();
        PerformerViewModel.GetOffersList();
        PerformerViewModel.GetCategoriesList();
    });

    // activate tabs
    $(document).ready(function(){
        $('.performer-tabs').tabs();
    });

    $(document).ready(function() {
        $('input#title-input, textarea#short-descr').characterCounter();
    });
</script>
